// Generated by using Rcpp::compileAttributes() -> do not edit by hand
// Generator token: 10BE3573-1514-4C36-9D1C-5A225CD40393

#include <RcppArmadillo.h>
#include <Rcpp.h>

using namespace Rcpp;

#ifdef RCPP_USE_GLOBAL_ROSTREAM
Rcpp::Rostream<true>&  Rcpp::Rcout = Rcpp::Rcpp_cout_get();
Rcpp::Rostream<false>& Rcpp::Rcerr = Rcpp::Rcpp_cerr_get();
#endif

// bps_n_logit
List bps_n_logit(double maxTime, const arma::mat& dataX, const arma::vec& datay, double prior_sigma2, arma::vec x0, arma::vec theta0, double ref, double rj_val, double ppi, int nmax, int burn);
RcppExport SEXP _rjpdmp_bps_n_logit(SEXP maxTimeSEXP, SEXP dataXSEXP, SEXP dataySEXP, SEXP prior_sigma2SEXP, SEXP x0SEXP, SEXP theta0SEXP, SEXP refSEXP, SEXP rj_valSEXP, SEXP ppiSEXP, SEXP nmaxSEXP, SEXP burnSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< double >::type maxTime(maxTimeSEXP);
    Rcpp::traits::input_parameter< const arma::mat& >::type dataX(dataXSEXP);
    Rcpp::traits::input_parameter< const arma::vec& >::type datay(dataySEXP);
    Rcpp::traits::input_parameter< double >::type prior_sigma2(prior_sigma2SEXP);
    Rcpp::traits::input_parameter< arma::vec >::type x0(x0SEXP);
    Rcpp::traits::input_parameter< arma::vec >::type theta0(theta0SEXP);
    Rcpp::traits::input_parameter< double >::type ref(refSEXP);
    Rcpp::traits::input_parameter< double >::type rj_val(rj_valSEXP);
    Rcpp::traits::input_parameter< double >::type ppi(ppiSEXP);
    Rcpp::traits::input_parameter< int >::type nmax(nmaxSEXP);
    Rcpp::traits::input_parameter< int >::type burn(burnSEXP);
    rcpp_result_gen = Rcpp::wrap(bps_n_logit(maxTime, dataX, datay, prior_sigma2, x0, theta0, ref, rj_val, ppi, nmax, burn));
    return rcpp_result_gen;
END_RCPP
}
// bps_s_logit
List bps_s_logit(double maxTime, const arma::mat& dataX, const arma::vec& datay, double prior_sigma2, arma::vec x0, arma::vec theta0, double ref, double rj_val, double ppi, int nmax, int burn);
RcppExport SEXP _rjpdmp_bps_s_logit(SEXP maxTimeSEXP, SEXP dataXSEXP, SEXP dataySEXP, SEXP prior_sigma2SEXP, SEXP x0SEXP, SEXP theta0SEXP, SEXP refSEXP, SEXP rj_valSEXP, SEXP ppiSEXP, SEXP nmaxSEXP, SEXP burnSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< double >::type maxTime(maxTimeSEXP);
    Rcpp::traits::input_parameter< const arma::mat& >::type dataX(dataXSEXP);
    Rcpp::traits::input_parameter< const arma::vec& >::type datay(dataySEXP);
    Rcpp::traits::input_parameter< double >::type prior_sigma2(prior_sigma2SEXP);
    Rcpp::traits::input_parameter< arma::vec >::type x0(x0SEXP);
    Rcpp::traits::input_parameter< arma::vec >::type theta0(theta0SEXP);
    Rcpp::traits::input_parameter< double >::type ref(refSEXP);
    Rcpp::traits::input_parameter< double >::type rj_val(rj_valSEXP);
    Rcpp::traits::input_parameter< double >::type ppi(ppiSEXP);
    Rcpp::traits::input_parameter< int >::type nmax(nmaxSEXP);
    Rcpp::traits::input_parameter< int >::type burn(burnSEXP);
    rcpp_result_gen = Rcpp::wrap(bps_s_logit(maxTime, dataX, datay, prior_sigma2, x0, theta0, ref, rj_val, ppi, nmax, burn));
    return rcpp_result_gen;
END_RCPP
}
// bps_s_rr
List bps_s_rr(double maxTime, const arma::mat& dataX, const arma::vec& datay, double prior_sigma2, arma::vec x0, arma::vec theta0, double ref, double rj_val, double ppi, int nmax, int burn);
RcppExport SEXP _rjpdmp_bps_s_rr(SEXP maxTimeSEXP, SEXP dataXSEXP, SEXP dataySEXP, SEXP prior_sigma2SEXP, SEXP x0SEXP, SEXP theta0SEXP, SEXP refSEXP, SEXP rj_valSEXP, SEXP ppiSEXP, SEXP nmaxSEXP, SEXP burnSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< double >::type maxTime(maxTimeSEXP);
    Rcpp::traits::input_parameter< const arma::mat& >::type dataX(dataXSEXP);
    Rcpp::traits::input_parameter< const arma::vec& >::type datay(dataySEXP);
    Rcpp::traits::input_parameter< double >::type prior_sigma2(prior_sigma2SEXP);
    Rcpp::traits::input_parameter< arma::vec >::type x0(x0SEXP);
    Rcpp::traits::input_parameter< arma::vec >::type theta0(theta0SEXP);
    Rcpp::traits::input_parameter< double >::type ref(refSEXP);
    Rcpp::traits::input_parameter< double >::type rj_val(rj_valSEXP);
    Rcpp::traits::input_parameter< double >::type ppi(ppiSEXP);
    Rcpp::traits::input_parameter< int >::type nmax(nmaxSEXP);
    Rcpp::traits::input_parameter< int >::type burn(burnSEXP);
    rcpp_result_gen = Rcpp::wrap(bps_s_rr(maxTime, dataX, datay, prior_sigma2, x0, theta0, ref, rj_val, ppi, nmax, burn));
    return rcpp_result_gen;
END_RCPP
}
// bps_n_rr
List bps_n_rr(double maxTime, const arma::mat& dataX, const arma::vec& datay, double prior_sigma2, arma::vec x0, arma::vec theta0, double ref, double rj_val, double ppi, int nmax, int burn);
RcppExport SEXP _rjpdmp_bps_n_rr(SEXP maxTimeSEXP, SEXP dataXSEXP, SEXP dataySEXP, SEXP prior_sigma2SEXP, SEXP x0SEXP, SEXP theta0SEXP, SEXP refSEXP, SEXP rj_valSEXP, SEXP ppiSEXP, SEXP nmaxSEXP, SEXP burnSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< double >::type maxTime(maxTimeSEXP);
    Rcpp::traits::input_parameter< const arma::mat& >::type dataX(dataXSEXP);
    Rcpp::traits::input_parameter< const arma::vec& >::type datay(dataySEXP);
    Rcpp::traits::input_parameter< double >::type prior_sigma2(prior_sigma2SEXP);
    Rcpp::traits::input_parameter< arma::vec >::type x0(x0SEXP);
    Rcpp::traits::input_parameter< arma::vec >::type theta0(theta0SEXP);
    Rcpp::traits::input_parameter< double >::type ref(refSEXP);
    Rcpp::traits::input_parameter< double >::type rj_val(rj_valSEXP);
    Rcpp::traits::input_parameter< double >::type ppi(ppiSEXP);
    Rcpp::traits::input_parameter< int >::type nmax(nmaxSEXP);
    Rcpp::traits::input_parameter< int >::type burn(burnSEXP);
    rcpp_result_gen = Rcpp::wrap(bps_n_rr(maxTime, dataX, datay, prior_sigma2, x0, theta0, ref, rj_val, ppi, nmax, burn));
    return rcpp_result_gen;
END_RCPP
}
// gibbs_logit
List gibbs_logit(const arma::mat& dataX, const arma::vec& datay, arma::vec beta, arma::vec gamma, double ppi, int nsamples, double maxTime, double prior_sigma2);
RcppExport SEXP _rjpdmp_gibbs_logit(SEXP dataXSEXP, SEXP dataySEXP, SEXP betaSEXP, SEXP gammaSEXP, SEXP ppiSEXP, SEXP nsamplesSEXP, SEXP maxTimeSEXP, SEXP prior_sigma2SEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< const arma::mat& >::type dataX(dataXSEXP);
    Rcpp::traits::input_parameter< const arma::vec& >::type datay(dataySEXP);
    Rcpp::traits::input_parameter< arma::vec >::type beta(betaSEXP);
    Rcpp::traits::input_parameter< arma::vec >::type gamma(gammaSEXP);
    Rcpp::traits::input_parameter< double >::type ppi(ppiSEXP);
    Rcpp::traits::input_parameter< int >::type nsamples(nsamplesSEXP);
    Rcpp::traits::input_parameter< double >::type maxTime(maxTimeSEXP);
    Rcpp::traits::input_parameter< double >::type prior_sigma2(prior_sigma2SEXP);
    rcpp_result_gen = Rcpp::wrap(gibbs_logit(dataX, datay, beta, gamma, ppi, nsamples, maxTime, prior_sigma2));
    return rcpp_result_gen;
END_RCPP
}
// gibbs_logit_light
List gibbs_logit_light(const arma::mat& dataX, const arma::vec& datay, arma::vec beta, arma::vec gamma, double ppi, int nsamples, int nburn, double maxTime, double prior_sigma2);
RcppExport SEXP _rjpdmp_gibbs_logit_light(SEXP dataXSEXP, SEXP dataySEXP, SEXP betaSEXP, SEXP gammaSEXP, SEXP ppiSEXP, SEXP nsamplesSEXP, SEXP nburnSEXP, SEXP maxTimeSEXP, SEXP prior_sigma2SEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< const arma::mat& >::type dataX(dataXSEXP);
    Rcpp::traits::input_parameter< const arma::vec& >::type datay(dataySEXP);
    Rcpp::traits::input_parameter< arma::vec >::type beta(betaSEXP);
    Rcpp::traits::input_parameter< arma::vec >::type gamma(gammaSEXP);
    Rcpp::traits::input_parameter< double >::type ppi(ppiSEXP);
    Rcpp::traits::input_parameter< int >::type nsamples(nsamplesSEXP);
    Rcpp::traits::input_parameter< int >::type nburn(nburnSEXP);
    Rcpp::traits::input_parameter< double >::type maxTime(maxTimeSEXP);
    Rcpp::traits::input_parameter< double >::type prior_sigma2(prior_sigma2SEXP);
    rcpp_result_gen = Rcpp::wrap(gibbs_logit_light(dataX, datay, beta, gamma, ppi, nsamples, nburn, maxTime, prior_sigma2));
    return rcpp_result_gen;
END_RCPP
}
// ll_logit
double ll_logit(const arma::mat& dataX, const arma::vec& datay, arma::vec x, arma::vec gamma, double prior_sigma2);
RcppExport SEXP _rjpdmp_ll_logit(SEXP dataXSEXP, SEXP dataySEXP, SEXP xSEXP, SEXP gammaSEXP, SEXP prior_sigma2SEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< const arma::mat& >::type dataX(dataXSEXP);
    Rcpp::traits::input_parameter< const arma::vec& >::type datay(dataySEXP);
    Rcpp::traits::input_parameter< arma::vec >::type x(xSEXP);
    Rcpp::traits::input_parameter< arma::vec >::type gamma(gammaSEXP);
    Rcpp::traits::input_parameter< double >::type prior_sigma2(prior_sigma2SEXP);
    rcpp_result_gen = Rcpp::wrap(ll_logit(dataX, datay, x, gamma, prior_sigma2));
    return rcpp_result_gen;
END_RCPP
}
// calc_gamma
double calc_gamma(arma::vec gamma, arma::vec gamma_change);
RcppExport SEXP _rjpdmp_calc_gamma(SEXP gammaSEXP, SEXP gamma_changeSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< arma::vec >::type gamma(gammaSEXP);
    Rcpp::traits::input_parameter< arma::vec >::type gamma_change(gamma_changeSEXP);
    rcpp_result_gen = Rcpp::wrap(calc_gamma(gamma, gamma_change));
    return rcpp_result_gen;
END_RCPP
}
// hmc_logit_rj
List hmc_logit_rj(double maxTime, const arma::mat& X, const arma::vec& y, arma::vec x0, double epsilon, double stoch_time, int nmax, int burn, int thin, double prior_sigma2, double ppi, double rw_sig2);
RcppExport SEXP _rjpdmp_hmc_logit_rj(SEXP maxTimeSEXP, SEXP XSEXP, SEXP ySEXP, SEXP x0SEXP, SEXP epsilonSEXP, SEXP stoch_timeSEXP, SEXP nmaxSEXP, SEXP burnSEXP, SEXP thinSEXP, SEXP prior_sigma2SEXP, SEXP ppiSEXP, SEXP rw_sig2SEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< double >::type maxTime(maxTimeSEXP);
    Rcpp::traits::input_parameter< const arma::mat& >::type X(XSEXP);
    Rcpp::traits::input_parameter< const arma::vec& >::type y(ySEXP);
    Rcpp::traits::input_parameter< arma::vec >::type x0(x0SEXP);
    Rcpp::traits::input_parameter< double >::type epsilon(epsilonSEXP);
    Rcpp::traits::input_parameter< double >::type stoch_time(stoch_timeSEXP);
    Rcpp::traits::input_parameter< int >::type nmax(nmaxSEXP);
    Rcpp::traits::input_parameter< int >::type burn(burnSEXP);
    Rcpp::traits::input_parameter< int >::type thin(thinSEXP);
    Rcpp::traits::input_parameter< double >::type prior_sigma2(prior_sigma2SEXP);
    Rcpp::traits::input_parameter< double >::type ppi(ppiSEXP);
    Rcpp::traits::input_parameter< double >::type rw_sig2(rw_sig2SEXP);
    rcpp_result_gen = Rcpp::wrap(hmc_logit_rj(maxTime, X, y, x0, epsilon, stoch_time, nmax, burn, thin, prior_sigma2, ppi, rw_sig2));
    return rcpp_result_gen;
END_RCPP
}
// hmc_logit_rj_better
List hmc_logit_rj_better(double maxTime, const arma::mat& X, const arma::vec& y, arma::vec x0, double epsilon, double stoch_time, int nmax, int burn, int thin, double prior_sigma2, double ppi, double rw_sig2, double prob_rj);
RcppExport SEXP _rjpdmp_hmc_logit_rj_better(SEXP maxTimeSEXP, SEXP XSEXP, SEXP ySEXP, SEXP x0SEXP, SEXP epsilonSEXP, SEXP stoch_timeSEXP, SEXP nmaxSEXP, SEXP burnSEXP, SEXP thinSEXP, SEXP prior_sigma2SEXP, SEXP ppiSEXP, SEXP rw_sig2SEXP, SEXP prob_rjSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< double >::type maxTime(maxTimeSEXP);
    Rcpp::traits::input_parameter< const arma::mat& >::type X(XSEXP);
    Rcpp::traits::input_parameter< const arma::vec& >::type y(ySEXP);
    Rcpp::traits::input_parameter< arma::vec >::type x0(x0SEXP);
    Rcpp::traits::input_parameter< double >::type epsilon(epsilonSEXP);
    Rcpp::traits::input_parameter< double >::type stoch_time(stoch_timeSEXP);
    Rcpp::traits::input_parameter< int >::type nmax(nmaxSEXP);
    Rcpp::traits::input_parameter< int >::type burn(burnSEXP);
    Rcpp::traits::input_parameter< int >::type thin(thinSEXP);
    Rcpp::traits::input_parameter< double >::type prior_sigma2(prior_sigma2SEXP);
    Rcpp::traits::input_parameter< double >::type ppi(ppiSEXP);
    Rcpp::traits::input_parameter< double >::type rw_sig2(rw_sig2SEXP);
    Rcpp::traits::input_parameter< double >::type prob_rj(prob_rjSEXP);
    rcpp_result_gen = Rcpp::wrap(hmc_logit_rj_better(maxTime, X, y, x0, epsilon, stoch_time, nmax, burn, thin, prior_sigma2, ppi, rw_sig2, prob_rj));
    return rcpp_result_gen;
END_RCPP
}
// hmc_logit_rj2
List hmc_logit_rj2(double maxTime, const arma::mat& X, const arma::vec& y, arma::vec x0, double epsilon, double stoch_time, int nmax, int burn, int thin, double prior_sigma2, double ppi, double rw_sig2, double prob_rj);
RcppExport SEXP _rjpdmp_hmc_logit_rj2(SEXP maxTimeSEXP, SEXP XSEXP, SEXP ySEXP, SEXP x0SEXP, SEXP epsilonSEXP, SEXP stoch_timeSEXP, SEXP nmaxSEXP, SEXP burnSEXP, SEXP thinSEXP, SEXP prior_sigma2SEXP, SEXP ppiSEXP, SEXP rw_sig2SEXP, SEXP prob_rjSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< double >::type maxTime(maxTimeSEXP);
    Rcpp::traits::input_parameter< const arma::mat& >::type X(XSEXP);
    Rcpp::traits::input_parameter< const arma::vec& >::type y(ySEXP);
    Rcpp::traits::input_parameter< arma::vec >::type x0(x0SEXP);
    Rcpp::traits::input_parameter< double >::type epsilon(epsilonSEXP);
    Rcpp::traits::input_parameter< double >::type stoch_time(stoch_timeSEXP);
    Rcpp::traits::input_parameter< int >::type nmax(nmaxSEXP);
    Rcpp::traits::input_parameter< int >::type burn(burnSEXP);
    Rcpp::traits::input_parameter< int >::type thin(thinSEXP);
    Rcpp::traits::input_parameter< double >::type prior_sigma2(prior_sigma2SEXP);
    Rcpp::traits::input_parameter< double >::type ppi(ppiSEXP);
    Rcpp::traits::input_parameter< double >::type rw_sig2(rw_sig2SEXP);
    Rcpp::traits::input_parameter< double >::type prob_rj(prob_rjSEXP);
    rcpp_result_gen = Rcpp::wrap(hmc_logit_rj2(maxTime, X, y, x0, epsilon, stoch_time, nmax, burn, thin, prior_sigma2, ppi, rw_sig2, prob_rj));
    return rcpp_result_gen;
END_RCPP
}
// hmc_logit
List hmc_logit(double maxTime, const arma::mat& X, const arma::vec& y, arma::vec x0, double epsilon, double stoch_time, int nmax, int burn, int thin, double prior_sigma2, double ppi);
RcppExport SEXP _rjpdmp_hmc_logit(SEXP maxTimeSEXP, SEXP XSEXP, SEXP ySEXP, SEXP x0SEXP, SEXP epsilonSEXP, SEXP stoch_timeSEXP, SEXP nmaxSEXP, SEXP burnSEXP, SEXP thinSEXP, SEXP prior_sigma2SEXP, SEXP ppiSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< double >::type maxTime(maxTimeSEXP);
    Rcpp::traits::input_parameter< const arma::mat& >::type X(XSEXP);
    Rcpp::traits::input_parameter< const arma::vec& >::type y(ySEXP);
    Rcpp::traits::input_parameter< arma::vec >::type x0(x0SEXP);
    Rcpp::traits::input_parameter< double >::type epsilon(epsilonSEXP);
    Rcpp::traits::input_parameter< double >::type stoch_time(stoch_timeSEXP);
    Rcpp::traits::input_parameter< int >::type nmax(nmaxSEXP);
    Rcpp::traits::input_parameter< int >::type burn(burnSEXP);
    Rcpp::traits::input_parameter< int >::type thin(thinSEXP);
    Rcpp::traits::input_parameter< double >::type prior_sigma2(prior_sigma2SEXP);
    Rcpp::traits::input_parameter< double >::type ppi(ppiSEXP);
    rcpp_result_gen = Rcpp::wrap(hmc_logit(maxTime, X, y, x0, epsilon, stoch_time, nmax, burn, thin, prior_sigma2, ppi));
    return rcpp_result_gen;
END_RCPP
}
// linear_inv_t
double linear_inv_t(double a, double b, double u);
RcppExport SEXP _rjpdmp_linear_inv_t(SEXP aSEXP, SEXP bSEXP, SEXP uSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< double >::type a(aSEXP);
    Rcpp::traits::input_parameter< double >::type b(bSEXP);
    Rcpp::traits::input_parameter< double >::type u(uSEXP);
    rcpp_result_gen = Rcpp::wrap(linear_inv_t(a, b, u));
    return rcpp_result_gen;
END_RCPP
}
// zigzag_ss
List zigzag_ss(double maxTime, const arma::vec& mu, double sigma2, arma::vec x0, arma::vec theta0, double rj_val, double ppi, int nmax, int burn);
RcppExport SEXP _rjpdmp_zigzag_ss(SEXP maxTimeSEXP, SEXP muSEXP, SEXP sigma2SEXP, SEXP x0SEXP, SEXP theta0SEXP, SEXP rj_valSEXP, SEXP ppiSEXP, SEXP nmaxSEXP, SEXP burnSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< double >::type maxTime(maxTimeSEXP);
    Rcpp::traits::input_parameter< const arma::vec& >::type mu(muSEXP);
    Rcpp::traits::input_parameter< double >::type sigma2(sigma2SEXP);
    Rcpp::traits::input_parameter< arma::vec >::type x0(x0SEXP);
    Rcpp::traits::input_parameter< arma::vec >::type theta0(theta0SEXP);
    Rcpp::traits::input_parameter< double >::type rj_val(rj_valSEXP);
    Rcpp::traits::input_parameter< double >::type ppi(ppiSEXP);
    Rcpp::traits::input_parameter< int >::type nmax(nmaxSEXP);
    Rcpp::traits::input_parameter< int >::type burn(burnSEXP);
    rcpp_result_gen = Rcpp::wrap(zigzag_ss(maxTime, mu, sigma2, x0, theta0, rj_val, ppi, nmax, burn));
    return rcpp_result_gen;
END_RCPP
}
// bps_n_ss
List bps_n_ss(double maxTime, const arma::vec& mu, double sigma2, arma::vec x0, arma::vec theta0, double ref0, double rj_val, double ppi, int nmax, int burn, bool ref_auto);
RcppExport SEXP _rjpdmp_bps_n_ss(SEXP maxTimeSEXP, SEXP muSEXP, SEXP sigma2SEXP, SEXP x0SEXP, SEXP theta0SEXP, SEXP ref0SEXP, SEXP rj_valSEXP, SEXP ppiSEXP, SEXP nmaxSEXP, SEXP burnSEXP, SEXP ref_autoSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< double >::type maxTime(maxTimeSEXP);
    Rcpp::traits::input_parameter< const arma::vec& >::type mu(muSEXP);
    Rcpp::traits::input_parameter< double >::type sigma2(sigma2SEXP);
    Rcpp::traits::input_parameter< arma::vec >::type x0(x0SEXP);
    Rcpp::traits::input_parameter< arma::vec >::type theta0(theta0SEXP);
    Rcpp::traits::input_parameter< double >::type ref0(ref0SEXP);
    Rcpp::traits::input_parameter< double >::type rj_val(rj_valSEXP);
    Rcpp::traits::input_parameter< double >::type ppi(ppiSEXP);
    Rcpp::traits::input_parameter< int >::type nmax(nmaxSEXP);
    Rcpp::traits::input_parameter< int >::type burn(burnSEXP);
    Rcpp::traits::input_parameter< bool >::type ref_auto(ref_autoSEXP);
    rcpp_result_gen = Rcpp::wrap(bps_n_ss(maxTime, mu, sigma2, x0, theta0, ref0, rj_val, ppi, nmax, burn, ref_auto));
    return rcpp_result_gen;
END_RCPP
}
// bps_s_ss
List bps_s_ss(double maxTime, const arma::vec& mu, double sigma2, arma::vec x0, arma::vec theta0, double ref0, double rj_val, double ppi, int nmax, int burn, bool ref_auto);
RcppExport SEXP _rjpdmp_bps_s_ss(SEXP maxTimeSEXP, SEXP muSEXP, SEXP sigma2SEXP, SEXP x0SEXP, SEXP theta0SEXP, SEXP ref0SEXP, SEXP rj_valSEXP, SEXP ppiSEXP, SEXP nmaxSEXP, SEXP burnSEXP, SEXP ref_autoSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< double >::type maxTime(maxTimeSEXP);
    Rcpp::traits::input_parameter< const arma::vec& >::type mu(muSEXP);
    Rcpp::traits::input_parameter< double >::type sigma2(sigma2SEXP);
    Rcpp::traits::input_parameter< arma::vec >::type x0(x0SEXP);
    Rcpp::traits::input_parameter< arma::vec >::type theta0(theta0SEXP);
    Rcpp::traits::input_parameter< double >::type ref0(ref0SEXP);
    Rcpp::traits::input_parameter< double >::type rj_val(rj_valSEXP);
    Rcpp::traits::input_parameter< double >::type ppi(ppiSEXP);
    Rcpp::traits::input_parameter< int >::type nmax(nmaxSEXP);
    Rcpp::traits::input_parameter< int >::type burn(burnSEXP);
    Rcpp::traits::input_parameter< bool >::type ref_auto(ref_autoSEXP);
    rcpp_result_gen = Rcpp::wrap(bps_s_ss(maxTime, mu, sigma2, x0, theta0, ref0, rj_val, ppi, nmax, burn, ref_auto));
    return rcpp_result_gen;
END_RCPP
}
// zigzag_logit
List zigzag_logit(double maxTime, const arma::mat& dataX, const arma::vec& datay, double prior_sigma2, arma::vec x0, arma::vec theta0, double rj_val, double ppi, int nmax, int burn);
RcppExport SEXP _rjpdmp_zigzag_logit(SEXP maxTimeSEXP, SEXP dataXSEXP, SEXP dataySEXP, SEXP prior_sigma2SEXP, SEXP x0SEXP, SEXP theta0SEXP, SEXP rj_valSEXP, SEXP ppiSEXP, SEXP nmaxSEXP, SEXP burnSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< double >::type maxTime(maxTimeSEXP);
    Rcpp::traits::input_parameter< const arma::mat& >::type dataX(dataXSEXP);
    Rcpp::traits::input_parameter< const arma::vec& >::type datay(dataySEXP);
    Rcpp::traits::input_parameter< double >::type prior_sigma2(prior_sigma2SEXP);
    Rcpp::traits::input_parameter< arma::vec >::type x0(x0SEXP);
    Rcpp::traits::input_parameter< arma::vec >::type theta0(theta0SEXP);
    Rcpp::traits::input_parameter< double >::type rj_val(rj_valSEXP);
    Rcpp::traits::input_parameter< double >::type ppi(ppiSEXP);
    Rcpp::traits::input_parameter< int >::type nmax(nmaxSEXP);
    Rcpp::traits::input_parameter< int >::type burn(burnSEXP);
    rcpp_result_gen = Rcpp::wrap(zigzag_logit(maxTime, dataX, datay, prior_sigma2, x0, theta0, rj_val, ppi, nmax, burn));
    return rcpp_result_gen;
END_RCPP
}
// zigzag_logit_ss
List zigzag_logit_ss(double maxTime, const arma::mat& dataX, const arma::vec& datay, double prior_sigma2, arma::vec x0, arma::vec theta0, arma::vec cvref, double rj_val, double ppi, int nmax, int burn);
RcppExport SEXP _rjpdmp_zigzag_logit_ss(SEXP maxTimeSEXP, SEXP dataXSEXP, SEXP dataySEXP, SEXP prior_sigma2SEXP, SEXP x0SEXP, SEXP theta0SEXP, SEXP cvrefSEXP, SEXP rj_valSEXP, SEXP ppiSEXP, SEXP nmaxSEXP, SEXP burnSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< double >::type maxTime(maxTimeSEXP);
    Rcpp::traits::input_parameter< const arma::mat& >::type dataX(dataXSEXP);
    Rcpp::traits::input_parameter< const arma::vec& >::type datay(dataySEXP);
    Rcpp::traits::input_parameter< double >::type prior_sigma2(prior_sigma2SEXP);
    Rcpp::traits::input_parameter< arma::vec >::type x0(x0SEXP);
    Rcpp::traits::input_parameter< arma::vec >::type theta0(theta0SEXP);
    Rcpp::traits::input_parameter< arma::vec >::type cvref(cvrefSEXP);
    Rcpp::traits::input_parameter< double >::type rj_val(rj_valSEXP);
    Rcpp::traits::input_parameter< double >::type ppi(ppiSEXP);
    Rcpp::traits::input_parameter< int >::type nmax(nmaxSEXP);
    Rcpp::traits::input_parameter< int >::type burn(burnSEXP);
    rcpp_result_gen = Rcpp::wrap(zigzag_logit_ss(maxTime, dataX, datay, prior_sigma2, x0, theta0, cvref, rj_val, ppi, nmax, burn));
    return rcpp_result_gen;
END_RCPP
}
// zigzag_rr
List zigzag_rr(double maxTime, const arma::mat& dataX, const arma::vec& datay, double prior_sigma2, arma::vec x0, arma::vec theta0, double rj_val, double ppi, int nmax, int burn);
RcppExport SEXP _rjpdmp_zigzag_rr(SEXP maxTimeSEXP, SEXP dataXSEXP, SEXP dataySEXP, SEXP prior_sigma2SEXP, SEXP x0SEXP, SEXP theta0SEXP, SEXP rj_valSEXP, SEXP ppiSEXP, SEXP nmaxSEXP, SEXP burnSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< double >::type maxTime(maxTimeSEXP);
    Rcpp::traits::input_parameter< const arma::mat& >::type dataX(dataXSEXP);
    Rcpp::traits::input_parameter< const arma::vec& >::type datay(dataySEXP);
    Rcpp::traits::input_parameter< double >::type prior_sigma2(prior_sigma2SEXP);
    Rcpp::traits::input_parameter< arma::vec >::type x0(x0SEXP);
    Rcpp::traits::input_parameter< arma::vec >::type theta0(theta0SEXP);
    Rcpp::traits::input_parameter< double >::type rj_val(rj_valSEXP);
    Rcpp::traits::input_parameter< double >::type ppi(ppiSEXP);
    Rcpp::traits::input_parameter< int >::type nmax(nmaxSEXP);
    Rcpp::traits::input_parameter< int >::type burn(burnSEXP);
    rcpp_result_gen = Rcpp::wrap(zigzag_rr(maxTime, dataX, datay, prior_sigma2, x0, theta0, rj_val, ppi, nmax, burn));
    return rcpp_result_gen;
END_RCPP
}

static const R_CallMethodDef CallEntries[] = {
    {"_rjpdmp_bps_n_logit", (DL_FUNC) &_rjpdmp_bps_n_logit, 11},
    {"_rjpdmp_bps_s_logit", (DL_FUNC) &_rjpdmp_bps_s_logit, 11},
    {"_rjpdmp_bps_s_rr", (DL_FUNC) &_rjpdmp_bps_s_rr, 11},
    {"_rjpdmp_bps_n_rr", (DL_FUNC) &_rjpdmp_bps_n_rr, 11},
    {"_rjpdmp_gibbs_logit", (DL_FUNC) &_rjpdmp_gibbs_logit, 8},
    {"_rjpdmp_gibbs_logit_light", (DL_FUNC) &_rjpdmp_gibbs_logit_light, 9},
    {"_rjpdmp_ll_logit", (DL_FUNC) &_rjpdmp_ll_logit, 5},
    {"_rjpdmp_calc_gamma", (DL_FUNC) &_rjpdmp_calc_gamma, 2},
    {"_rjpdmp_hmc_logit_rj", (DL_FUNC) &_rjpdmp_hmc_logit_rj, 12},
    {"_rjpdmp_hmc_logit_rj_better", (DL_FUNC) &_rjpdmp_hmc_logit_rj_better, 13},
    {"_rjpdmp_hmc_logit_rj2", (DL_FUNC) &_rjpdmp_hmc_logit_rj2, 13},
    {"_rjpdmp_hmc_logit", (DL_FUNC) &_rjpdmp_hmc_logit, 11},
    {"_rjpdmp_linear_inv_t", (DL_FUNC) &_rjpdmp_linear_inv_t, 3},
    {"_rjpdmp_zigzag_ss", (DL_FUNC) &_rjpdmp_zigzag_ss, 9},
    {"_rjpdmp_bps_n_ss", (DL_FUNC) &_rjpdmp_bps_n_ss, 11},
    {"_rjpdmp_bps_s_ss", (DL_FUNC) &_rjpdmp_bps_s_ss, 11},
    {"_rjpdmp_zigzag_logit", (DL_FUNC) &_rjpdmp_zigzag_logit, 10},
    {"_rjpdmp_zigzag_logit_ss", (DL_FUNC) &_rjpdmp_zigzag_logit_ss, 11},
    {"_rjpdmp_zigzag_rr", (DL_FUNC) &_rjpdmp_zigzag_rr, 10},
    {NULL, NULL, 0}
};

RcppExport void R_init_rjpdmp(DllInfo *dll) {
    R_registerRoutines(dll, NULL, CallEntries, NULL, NULL);
    R_useDynamicSymbols(dll, FALSE);
}
